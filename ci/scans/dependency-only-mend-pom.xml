<?xml version="1.0" encoding="UTF-8"?> 
<!--
  Copyright (c) 2023, 2024 IBM Corporation and others.

  This program and the accompanying materials are made available under the
  terms of the Eclipse Public License v. 2.0 which is available at
  http://www.eclipse.org/legal/epl-2.0.

  SPDX-License-Identifier: EPL-2.0

  Contributors:
      IBM Corporation - initial implementation
-->
<project
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>io.openliberty.tools.eclipse</groupId>
    <artifactId>dependency-only</artifactId>
    <version>none</version>

    <parent>
        <groupId>io.openliberty.tools.eclipse</groupId>
        <artifactId>parent</artifactId>
        <version>24.0.6-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

<!--

    NOTE: See (IBM-employee-internal-only link):  https://github.ibm.com/liberty-dev-ex/liberty-tools-eclipse/wiki/To-do-an-updated-scan   
        for more info on how to use.



    Complete list of contents for the scan:

        NOTE:  We don't want to bother scanning test-only dependencies so we exclude them from this analysis

    1. regular Maven dependencies - Currently only our io.openliberty.tools.eclipse.lsp4e bundle has these.  
    2. Bundle MANIFEST.MF entries via Require-Bundle directive
    3. Bundle MANIFEST.MF entries via Import-Package
    4. <extraRequirements> in target-platform-configuration config in tests/pom.xml
    5. Other plugins/features pulled in via category.xml <repository-reference> 
    6. Other plugins/features pulled in via feature.xml (I forget the syntax since we don't use this at the moment)
    
    OLD DIRECTIONS: 
            (This builds the file from scratch)

    1) Start by installing, as an end user, the Enterprise Java package of the matching quarterly release
    2a) For Require-Bundle find the plugin version using Help->Installation Details
    2b) For Import-Package, open the osgi console, and type `package <the.package>` at the console prompt to find the plugin/bundle and version
    3) Look for confirmation of version in Target Platform (.target file) release plugins dir (e.g. https://download.eclipse.org/releases/2023-03/202303151000/plugins/ for the target-platform-1Q2023.target file)
    4) Identify/guess the groupId for the corresponding artifact and confirm matching POM coordinates in Maven Central artifact.  
    This could use some elaboration.   The key element making this non-trivial is that the groupId can be anything at all.    E.g. much of the "core" (using that term loosely) Eclipse function is packaged with '<groupId>org.eclipse.platform</groupId>', but as central as JDT might seem there is a separate 'org.eclipse.jdt' groupId.  The 'com.google.gson' bundle is packaged with `<groupId>com.google.code.gson</groupId>`, so without knowing about 'code' in the groupId could be hard to find.    Once the groupId is found, though, the artifact and version are usually obvious enough.  It might help to open up the JAR and look for pom.properties and/or find the source in GitHub and guess what pom.xml might be used to release it.
         

    NEW DIRECTIONS: 
            (This takes the previous quarter's file as a given and builds the new contents as more of a "delta")

    1) Start by installing, as an end user, the Enterprise Java package of the matching quarterly release
    2) Take the file, and for each dependency entry, update it with the version of that bundle in the new Eclipse
    3) Look for added/deleted contents from MFs, e.g. start with:
    `git diff liberty-tools-23.0.9.202309271814..HEAD <hyphen><hyphen> bundles/io.openliberty.tools.eclipse.ui/META-INF/MANIFEST.MF`
       Maybe also include ideas from above, like tests/pom.xml, TP file, category.xml, etc.
    4) If there is something new, find what bundle it's in, and add that as a whole new entry (a whole new POM dependency)
    5) Validate with something like `mvn -f ci/scans/dependency-only-mend-pom.xml compile` to make sure deps are real



GAPS/MISSING:

    (Identified bundle, but believe there is NOT a matching artifact found in Maven Central):  

           1)
           import-pkg: org.eclipse.jem.util.emf.workbench
             bundle-symbolic-name="org.eclipse.jem.util"; bundle-version:Version="2.1.300.v202301170743"; 

             POM properties but not in Maven Central apparently

               groupId=org.eclipse.webtools.common
               artifactId=org.eclipse.jem.util
               version=2.1.300-SNAPSHOT

           2) CDT terminal stuff, did find a POM https://github.com/eclipse-cdt/cdt/blob/main/pom.xml  suggesting gid: org.eclipse.cdt, but nothing released there

           3) LSP-related libraries

             org.eclipse.lsp4mp.jdt.core,
             org.eclipse.lsp4jakarta.jdt.core,
             org.eclipse.jdt.ls.core,
             org.eclipse.lsp4e,
             org.eclipse.lsp4e.jdt
        
          4) m2e, buildship plugins: (no hits on https://search.maven.org/search?q=g:org.eclipse.m2*  or https://search.maven.org/search?q=g:org.eclipse.buildship*) though 
            https://github.com/eclipse-m2e/m2e-core/blob/master/pom.xml suggests this would match the groupId.  Not bothering to look for Gradle

OTHER REFERENCES:  https://projects.eclipse.org/projects/eclipse.platform/developer - list of what Eclipse function has source hosted where / in which Git projects

-->

    <properties>
        <liberty.ls.version>2.1.2</liberty.ls.version>
        <jakarta.ls.version>0.2.1</jakarta.ls.version>
        <mp.ls.version>0.10.0</mp.ls.version>
    </properties>

    <!-- Updated for Eclipse 2024-06 (4.32.0) -->
    <dependencies>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>org.eclipse.jdt</artifactId>
            <version>3.19.400</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>org.eclipse.jdt.core</artifactId>
            <version>3.37.0</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>org.eclipse.jdt.debug</artifactId>
            <version>3.21.200</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>org.eclipse.jdt.debug.ui</artifactId>
            <version>3.13.300</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>org.eclipse.jdt.launching</artifactId>
            <version>3.21.100</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>org.eclipse.jdt.ui</artifactId>
            <version>3.32.0</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.jface.text</artifactId>
            <version>3.25.0</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lsp4j</groupId>
            <artifactId>org.eclipse.lsp4j</artifactId>
            <version>0.22.0</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lsp4j</groupId>
            <artifactId>org.eclipse.lsp4j.jsonrpc</artifactId>
            <version>0.22.0</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.core.commands</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.core.expressions</artifactId>
            <version>3.9.300</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.core.jobs</artifactId>
            <version>3.15.200</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId> 
            <artifactId>org.eclipse.core.resources</artifactId>
            <version>3.20.100</version> 
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.core.runtime</artifactId>
            <version>3.31.0</version>
        </dependency>
        <dependency>
            <!-- org.eclipse.debug.core, org.eclipse.debug.core.model -->
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.debug.core</artifactId>
            <version>3.21.300</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.debug.ui</artifactId>
            <version>3.18.300</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.equinox.preferences</artifactId>
            <version>3.11.0</version>
        </dependency>
        <dependency>
            <!-- org.osgi.framework, org.eclipse.osgi.service.debug -->
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.osgi</artifactId>
            <version>3.19.0</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.swt</artifactId>
            <version>3.125.0</version>
        </dependency>
        <dependency>
           <groupId>org.eclipse.platform</groupId>
           <artifactId>org.eclipse.ui</artifactId>
           <version>3.205.100</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.ui.ide</artifactId>
            <version>3.22.100</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.ui.editors</artifactId>
            <version>3.17.200</version>
        </dependency>
        <dependency>
            <!--  org.eclipse.ui.handlers, org.eclipse.ui.plugin -->
            <groupId>org.eclipse.platform</groupId>
            <artifactId>org.eclipse.ui.workbench</artifactId>
            <version>3.131.100</version>
        </dependency>

       <!-- Copy/paste from bundles/io.openliberty.tools.eclipse.lsp4e/pom.xml  (there seems to be a more elegant way to do this in Mend if anyone want to take this on -->

       <dependency>
            <groupId>org.eclipse.lsp4mp</groupId>
            <artifactId>org.eclipse.lsp4mp.ls</artifactId>
            <version>${mp.ls.version}</version>
       </dependency>
       <dependency>
            <groupId>io.openliberty.tools</groupId>
            <artifactId>liberty-langserver-lemminx</artifactId>
            <version>${liberty.ls.version}</version>
            <classifier>jar-with-dependencies</classifier>
        </dependency>
        <dependency>
            <groupId>io.openliberty.tools</groupId>
            <artifactId>liberty-langserver</artifactId>
            <version>${liberty.ls.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lsp4jakarta</groupId>
            <artifactId>org.eclipse.lsp4jakarta.ls</artifactId>
            <version>${jakarta.ls.version}</version>
            <classifier>jar-with-dependencies</classifier>
        </dependency>
    </dependencies>
</project>
